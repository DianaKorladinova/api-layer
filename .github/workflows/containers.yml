name: Containers - Build, Test

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    PublishContainers:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Build with Gradle
                run: >
                    ./gradlew jib -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD -Pzowe.docker.password=${{ secrets.PERSONAL_JB_TOKEN }} -Pzowe.docker.username=balhar-jakub -Pzowe.docker.container=ghcr.io/balhar-jakub/ -Pzowe.docker.tag=${{ github.event.pull_request.number || 'latest' }}
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsHA:
        needs: PublishContainers
        container: ubuntu:latest
        runs-on: ubuntu-latest
        timeout-minutes: 20

        services:
            nginx:
                image: nginx:latest
                ports:
                    - 443:443
                volumes:
                    - /$(pwd)/docker/nginx/load-balancer.conf:/etc/nginx
                    - /$(pwd)/keystore/docker:/etc/ssl/private
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_DISCOVERY_ALLPEERSURLS: https://discovery-service:10011/eureka,https://discovery-service-2:10011/eureka
            discovery-service-2:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_HOSTNAME: discovery-service-2
                    APIML_DISCOVERY_ALLPEERSURLS: https://discovery-service-2:10011/eureka,https://discovery-service:10011/eureka
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_DISCOVERYSERVICEURLS: https://discovery-service:10011/eureka/,https://discovery-service-2:10011/eureka/
            gateway-service-2:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_HOSTNAME: gateway-service-2
                    SERVER_INTERNAL_PORT: 10027
                    APIML_SERVICE_DISCOVERYSERVICEURLS: https://discovery-service:10011/eureka/,https://discovery-service-2:10011/eureka/
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-

            -   name: Run HA Tests
                run: >
                    ./gradlew runHATests --info --scan
                    -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                    -Dcredentials.user=USER -Dcredentials.password=validPassword
                    -Dzosmf.serviceId=mockzosmf -Denvironment.offPlatform=true
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

            -   name: Run Chaotic HA Tests
                run: >
                    ./gradlew runChaoticHATests --info --scan
                    -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                    -Dcredentials.user=USER -Dcredentials.password=validPassword
                    -Dzosmf.serviceId=mockzosmf -Denvironment.offPlatform=true
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

            -   name: Store results
                uses: actions/upload-artifact@v2
                if: always()
                with:
                    name: CITestsHA
                    path: |
                        integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1


